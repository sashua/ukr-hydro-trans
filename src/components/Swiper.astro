---
import type { HTMLAttributes } from 'astro/types';
import { nanoid } from 'nanoid';
import 'swiper/css';
import ButtonIcon from './ButtonIcon.astro';
import ButtonLink from './ButtonLink.astro';
import Card from './Card.astro';

interface Props extends HTMLAttributes<'div'> {
  items: any[];
  cardVariant?: 'default' | 'small' | 'image';
  navVariant?: 'white' | 'brand';
  linkText: string;
  linkHref: string;
  linkVariant?: 'primary' | 'secondary' | 'tetriary';
}

const {
  items,
  cardVariant = 'default',
  navVariant = 'white',
  linkText,
  linkHref,
  linkVariant = 'primary',
  ...props
} = Astro.props;

const swiperIds = {
  root: `swiper-root-${nanoid(8)}`,
  prev: `swiper-prev-${nanoid(8)}`,
  next: `swiper-next-${nanoid(8)}`,
};
---

<div id={swiperIds.root} class="swiper" {...props}>
  <ul class="swiper-wrapper">
    {
      items.map(item => (
        <li class="swiper-slide">
          <Card variant={cardVariant} />
        </li>
      ))
    }
  </ul>

  <div
    class="mt-12 sm:flex sm:flex-row-reverse sm:items-center sm:justify-between lg:mt-14"
  >
    <div class="mb-12 flex justify-between gap-4 px-6 sm:mb-0 sm:px-10">
      <ButtonIcon id={swiperIds.prev} icon="prev-arrow" variant={navVariant} />
      <ButtonIcon id={swiperIds.next} icon="next-arrow" variant={navVariant} />
    </div>
    {
      linkText && linkHref && (
        <ButtonLink href={linkHref} variant={linkVariant}>
          {linkText}
        </ButtonLink>
      )
    }
  </div>
</div>

<script type="module" define:vars={{ swiperIds }}>
  import Swiper from 'https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.esm.browser.min.js';
  const swiper = new Swiper(`#${swiperIds.root}`, {
    cssMode: true,
    grabCursor: true,
    slidesPerView: 1,
    spaceBetween: 24,
    breakpoints: {
      768: {
        slidesPerView: 2,
      },
      1440: {
        slidesPerView: 3,
      },
    },
    navigation: {
      prevEl: `#${swiperIds.prev}`,
      nextEl: `#${swiperIds.next}`,
    },
  });
</script>
