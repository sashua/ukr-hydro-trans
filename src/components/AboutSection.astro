---
import ButtonLink, { type ButtonLinkProps } from './common/ButtonLink';
import Counter, { type CounterProps } from './common/Counter';
import Section, { type Props as SectionProps } from './common/Section.astro';

interface Props extends SectionProps {
  text: string;
  statistics: CounterProps[];
  linkText: string;
  linkHref: ButtonLinkProps['href'];
}

const { text, statistics, linkText, linkHref, ...props } = Astro.props;
---

<Section
  class="relative bg-neutral-dark bg-logo-white bg-no-repeat pt-12 text-white [background-position:left_calc(50%-450px)_bottom] [background-size:600px]"
  {...props}
  slotInside
>
  <div
    class="absolute inset-x-0 right-1/2 top-0 border-r-32 border-t-48 border-r-transparent border-t-brand lg:right-2/3"
  >
  </div>
  <div class="sm:ml-auto sm:max-w-3xl">
    <div class="mb-16 grid grid-cols-2 sm:grid-cols-4">
      {
        statistics.map(({ label, value }) => (
          <Counter client:load label={label} value={value} />
        ))
      }
    </div>
    <p class="mb-14 text-xxl-500">{text}</p>
    <ButtonLink variant="secondary" href={linkHref}>{linkText}</ButtonLink>
  </div>
</Section>
